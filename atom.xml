<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chuchu-z</title>
  
  
  <link href="https://github.com/chuchu-z/atom.xml" rel="self"/>
  
  <link href="https://github.com/chuchu-z/"/>
  <updated>2022-03-31T02:36:04.528Z</updated>
  <id>https://github.com/chuchu-z/</id>
  
  <author>
    <name>chuchu-z</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux Shell脚本中使用alias定义别名</title>
    <link href="https://github.com/chuchu-z/posts/linux-shell-alias-config/"/>
    <id>https://github.com/chuchu-z/posts/linux-shell-alias-config/</id>
    <published>2022-03-31T01:57:18.000Z</published>
    <updated>2022-03-31T02:36:04.528Z</updated>
    
    <content type="html"><![CDATA[<p>在我们使用终端时, 为了提高平时工作效率和减少常用命令过长, 敲起来浪费时间, 可在<code>/etc/profile</code>文件中配置<code>alias</code>，自定指令的别名</p><span id="more"></span><p>打开<code>/etc/profile</code>配置文件</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> /etc/profile</code></pre><p>在文件末尾增加以下配置</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#[alias]</span><span class="token comment">##cd dir##</span><span class="token builtin class-name">alias</span> -- -<span class="token operator">=</span><span class="token string">'cd -'</span>  <span class="token comment"># 此处意思为输入 - 回车, 相当于执行 cd -, 快速切换回上一个目录(两个目录之间来回切换)</span><span class="token builtin class-name">alias</span> <span class="token punctuation">..</span><span class="token operator">=</span><span class="token string">'cd ..'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">e</span><span class="token operator">=</span><span class="token string">'exit'</span><span class="token builtin class-name">alias</span> <span class="token string">'www'</span><span class="token operator">=</span><span class="token string">'cd $www'</span> <span class="token comment"># $www是个人配置的环境变量, $www指向的是工作目录</span><span class="token comment">##vim file##</span><span class="token builtin class-name">alias</span> <span class="token string">'vp'</span><span class="token operator">=</span><span class="token string">'vim /etc/profile'</span><span class="token builtin class-name">alias</span> <span class="token string">'vv'</span><span class="token operator">=</span><span class="token string">'vim /etc/vimrc'</span><span class="token builtin class-name">alias</span> <span class="token string">'sp'</span><span class="token operator">=</span><span class="token string">'source /etc/profile'</span><span class="token comment">##git##</span><span class="token builtin class-name">alias</span> <span class="token string">'gs'</span><span class="token operator">=</span><span class="token string">'git status'</span><span class="token builtin class-name">alias</span> <span class="token string">'gaa'</span><span class="token operator">=</span><span class="token string">'git add .'</span><span class="token builtin class-name">alias</span> <span class="token string">'gcm'</span><span class="token operator">=</span><span class="token string">'git commit -m'</span><span class="token builtin class-name">alias</span> <span class="token string">'gco'</span><span class="token operator">=</span><span class="token string">'git checkout'</span><span class="token builtin class-name">alias</span> <span class="token string">'gb'</span><span class="token operator">=</span><span class="token string">'git branch -vvv'</span><span class="token builtin class-name">alias</span> <span class="token string">'gd'</span><span class="token operator">=</span><span class="token string">'git diff'</span><span class="token builtin class-name">alias</span> <span class="token string">'cls'</span><span class="token operator">=</span><span class="token string">'clear'</span><span class="token builtin class-name">alias</span> -- --<span class="token operator">=</span><span class="token string">'git checkout -'</span> <span class="token comment">#此处意思为输入 -- 回车, 相当于执行 git checkout -, 快速切换回上一个分支(两个分支之间来回切换)</span><span class="token builtin class-name">alias</span> <span class="token string">'show'</span><span class="token operator">=</span><span class="token string">'git show'</span><span class="token builtin class-name">alias</span> <span class="token string">'push'</span><span class="token operator">=</span><span class="token string">'git push origin `git branch --show-current`'</span><span class="token builtin class-name">alias</span> <span class="token string">'fpush'</span><span class="token operator">=</span><span class="token string">'git push -f origin `git branch --show-current`'</span> <span class="token comment">#强推</span><span class="token builtin class-name">alias</span> <span class="token string">'pull'</span><span class="token operator">=</span><span class="token string">'git pull origin `git branch --show-current`'</span><span class="token builtin class-name">alias</span> <span class="token string">'rpull'</span><span class="token operator">=</span><span class="token string">'git pull origin `git branch --show-current` --rebase'</span> <span class="token comment">#pull时增加 --rebase参数</span><span class="token builtin class-name">alias</span> <span class="token string">'ml'</span><span class="token operator">=</span><span class="token string">'git log --author=`git config user.name`'</span> <span class="token comment">#查看本人提交的log</span><span class="token builtin class-name">alias</span> <span class="token string">'gl'</span><span class="token operator">=</span><span class="token string">'git log'</span><span class="token builtin class-name">alias</span> <span class="token string">'ggl'</span><span class="token operator">=</span><span class="token string">'git log --graph'</span><span class="token builtin class-name">alias</span> <span class="token string">'gglp'</span><span class="token operator">=</span><span class="token string">'git log --graph --pretty=oneline --abbrev-commit'</span><span class="token comment">#可视化查看分支线的情况</span><span class="token builtin class-name">alias</span> <span class="token string">'review'</span><span class="token operator">=</span><span class="token string">'review() &#123; git status --short | egrep ^*.php | sed "s/^ *//" | egrep ^[^D] | tr -s " "| cut -d" " -f 2 | egrep -v database/migrations | xargs $1;&#125;;review'</span>  <span class="token comment">#列出修改过未提交的php文件</span><span class="token builtin class-name">alias</span> <span class="token string">'qq'</span><span class="token operator">=</span><span class="token string">'review "git checkout"'</span><span class="token comment">#把列出修改过未提交的php文件当做参数 提供给git checkout, 全部撤销</span><span class="token comment">##ssh##</span><span class="token builtin class-name">alias</span> <span class="token string">'chuchu'</span><span class="token operator">=</span><span class="token string">'ssh root@ip'</span><span class="token comment">##Docker##</span><span class="token builtin class-name">alias</span> <span class="token string">'dkre'</span><span class="token operator">=</span><span class="token string">'docker-compose restart'</span><span class="token builtin class-name">alias</span> <span class="token string">'dkup'</span><span class="token operator">=</span><span class="token string">'docker-compose up'</span><span class="token builtin class-name">alias</span> <span class="token string">'dkop'</span><span class="token operator">=</span><span class="token string">'docker-compose stop'</span><span class="token builtin class-name">alias</span> <span class="token string">'dkphp'</span><span class="token operator">=</span><span class="token string">"winpty docker exec -it <span class="token variable"><span class="token variable">`</span><span class="token function">docker</span> <span class="token function">ps</span> --filter<span class="token operator">=</span><span class="token string">'name=php7'</span> -q<span class="token variable">`</span></span> bash"</span> <span class="token comment">#快速进入docker的php7容器</span><span class="token builtin class-name">alias</span> <span class="token string">'dkphp5'</span><span class="token operator">=</span><span class="token string">"winpty docker exec -it <span class="token variable"><span class="token variable">`</span><span class="token function">docker</span> <span class="token function">ps</span> --filter<span class="token operator">=</span><span class="token string">'name=php5'</span> -q<span class="token variable">`</span></span> bash"</span></code></pre><p>执行 <code>source /etc/profile</code> 重新加载刚修改配置生效</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">source</span> /etc/profile</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;在我们使用终端时, 为了提高平时工作效率和减少常用命令过长, 敲起来浪费时间, 可在&lt;code&gt;/etc/profile&lt;/code&gt;文件中配置&lt;code&gt;alias&lt;/code&gt;，自定指令的别名&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://github.com/chuchu-z/categories/linux/"/>
    
    <category term="Shell" scheme="https://github.com/chuchu-z/categories/linux/shell/"/>
    
    
    <category term="Linux" scheme="https://github.com/chuchu-z/tags/linux/"/>
    
    <category term="Shell" scheme="https://github.com/chuchu-z/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Git 中的奇葩玩法</title>
    <link href="https://github.com/chuchu-z/posts/git-ridiculous-behavior/"/>
    <id>https://github.com/chuchu-z/posts/git-ridiculous-behavior/</id>
    <published>2022-03-25T11:01:50.000Z</published>
    <updated>2022-03-31T02:36:04.528Z</updated>
    
    <content type="html"><![CDATA[<p>一个 Git 随机生成提交日志网站, 每次刷新的内容随机</p><p>太搞了, 不怕挨揍的壮士可以使用如下命令进行日常代码的提交😂</p><span id="more"></span><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -s http://whatthecommit.com/index.txt<span class="token variable">)</span></span></code></pre><p><a href="http://whatthecommit.com/">http://whatthecommit.com</a></p><h2 id="没有最坑，只有更坑！"><a href="#没有最坑，只有更坑！" class="headerlink" title="没有最坑，只有更坑！"></a>没有最坑，只有更坑！</h2><p>此仓库专门收集史上最坑爹的代码片段，专治低血压 😵</p><p><a href="https://gitee.com/oschina/bullshit-codes/tree/master">https://gitee.com/oschina/bullshit-codes/tree/master</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一个 Git 随机生成提交日志网站, 每次刷新的内容随机&lt;/p&gt;
&lt;p&gt;太搞了, 不怕挨揍的壮士可以使用如下命令进行日常代码的提交😂&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://github.com/chuchu-z/categories/git/"/>
    
    
    <category term="Git" scheme="https://github.com/chuchu-z/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>关于谷歌Chrome浏览器非安全端口限制问题</title>
    <link href="https://github.com/chuchu-z/posts/chrome-proxy-limit/"/>
    <id>https://github.com/chuchu-z/posts/chrome-proxy-limit/</id>
    <published>2022-03-24T04:38:16.000Z</published>
    <updated>2022-03-31T02:36:04.528Z</updated>
    
    <content type="html"><![CDATA[<p>关于前段时间深圳疫情严重, 公司选择通过VPN居家远程办公</p><p>有个项目在App端测试由于无法通过VPN请求Api, 运维开放了外网地址并指定端口</p><span id="more"></span><p>但在<code>Chrome</code>浏览器上打开时无法正常得到正常的响应, 而使用<code>postman</code>等测试工具是可以正常响应的</p><p>这个问题以前有遇到过，是因为 <code>Chrome</code> 浏览器对非安全端口进行了限制, 具体端口可在这里查看</p><p><a href="https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc">https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc</a></p><h2 id="解决的办法"><a href="#解决的办法" class="headerlink" title="解决的办法"></a>解决的办法</h2><p>windows只需要右键<code>Chrome</code>浏览器快捷图标, 在<code>属性</code>设置里面的<code>目标</code>处增加以下参数,  然后关闭<code>Chrome</code>重新打开即可正常访问</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 多个端口号以英文逗号隔开</span>--explicitly-allowed-ports<span class="token operator">=</span><span class="token number">10080,30300</span></code></pre><p><img src="https://aexphoto-1251755124.file.myqcloud.com/img/2022/03/69ffe943a57fbc38de7c4e6b52f30fec.png" alt="image-20220324140658057"></p><p>Mac</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Chrome浏览器的解决方案</span><span class="token function">open</span> -a /Applications/Google Chrome.app/Contents/MacOS/Google Chrome --explicitly-allowed-ports<span class="token operator">=</span><span class="token number">6666,8888</span></code></pre><h2 id="Chrome-302重定向"><a href="#Chrome-302重定向" class="headerlink" title="Chrome 302重定向"></a>Chrome 302重定向</h2><p>本以为解决完端口问题后就可以快乐地编码, 然而当我正常打开页面登录后, 又遇到了另一个问题</p><p>登录成功后, 只要点击其他任意跳转, 页面会被重定向跳回到登录界面, 初步判断是因为<code>Cookies</code>的问题, 导致登录态没有了</p><blockquote><p>  遗留问题1. 无法确定是因为端口的问题导致<code>Cookies</code>丢失</p></blockquote><p>具体是事例在网上只找到了这个, 不确定是否同样的原因, 但因为我的<code>Chrome</code>浏览器版本目前是<code>99.0.4844.82</code>版本, 正如此博主所说</p><p>在<code>chrome91</code>及其以上版本，无法找到<code>SameSite by default cookies</code>和<code>Cookies without SameSite must be secure</code>两项配置</p><p>虽然没有解决我的问题, 但起码提供了参考</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://aexphoto-1251755124.file.myqcloud.com/img/2022/03/2067d66b7b939b94f21ae22acabc8668.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>  遗留问题2. 无法验证该方案是否可行</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于前段时间深圳疫情严重, 公司选择通过VPN居家远程办公&lt;/p&gt;
&lt;p&gt;有个项目在App端测试由于无法通过VPN请求Api, 运维开放了外网地址并指定端口&lt;/p&gt;</summary>
    
    
    
    <category term="Chrome" scheme="https://github.com/chuchu-z/categories/chrome/"/>
    
    
    <category term="Chrome" scheme="https://github.com/chuchu-z/tags/chrome/"/>
    
  </entry>
  
  <entry>
    <title>Win10 自定义 Git-Bash 终端界面 + 一言与终端结合</title>
    <link href="https://github.com/chuchu-z/posts/windows10-git-bash/"/>
    <id>https://github.com/chuchu-z/posts/windows10-git-bash/</id>
    <published>2022-02-25T02:39:27.000Z</published>
    <updated>2022-03-31T02:36:04.528Z</updated>
    
    <content type="html"><![CDATA[<p>由于Git默认的界面长的实在是不够美观, 平时用起来都无法赏心悦目, 参考网上的一些文章资料, 做了下改动</p><span id="more"></span><h3 id="修改Git-Bash-窗口左上角标题"><a href="#修改Git-Bash-窗口左上角标题" class="headerlink" title="修改Git Bash 窗口左上角标题"></a>修改Git Bash 窗口左上角标题</h3><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#该命令是一次性的,关闭后重新打开会恢复, 后面有完整的 </span><span class="token builtin class-name">echo</span> -ne <span class="token string">"<span class="token entity" title="\\">\\</span>e]0;title name<span class="token entity" title="\\">\\</span>a"</span></code></pre><h3 id="修改命令提示符"><a href="#修改命令提示符" class="headerlink" title="修改命令提示符"></a>修改命令提示符</h3><p>具体操作</p><p>打开 git-prompt.sh 文件</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> /etc/profile.d/git-prompt.sh</code></pre><p>将其修改为如下内容：</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token keyword">if</span> <span class="token builtin class-name">test</span> -f /etc/profile.d/git-sdk.sh<span class="token keyword">then</span>    <span class="token assign-left variable">TITLEPREFIX</span><span class="token operator">=</span>SDK-<span class="token variable">$&#123;MSYSTEM<span class="token operator">#</span>MINGW&#125;</span><span class="token keyword">else</span>    <span class="token assign-left variable">TITLEPREFIX</span><span class="token operator">=</span><span class="token variable">$MSYSTEM</span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> -f ~/.config/git/git-prompt.sh<span class="token keyword">then</span>    <span class="token builtin class-name">.</span> ~/.config/git/git-prompt.sh<span class="token keyword">else</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">'\[\033]0;Bash\007\]'</span>      <span class="token comment"># 窗口标题</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'\n'</span>                 <span class="token comment"># 换行</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'\[\033[32;1m\]'</span>     <span class="token comment"># 高亮绿色</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">' ➜ '</span>               <span class="token comment"># unicode 字符，右箭头, 如果显示不出来大概率是utf-8编码问题</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'\[\033[33;1m\]'</span>     <span class="token comment"># 高亮黄色</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'\W'</span>                 <span class="token comment"># 当前目录</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'\[\033[34;1m\]'</span>     <span class="token comment"># 高亮蓝色</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">' [\t]'</span>              <span class="token comment"># 当前时间</span>        <span class="token keyword">if</span> <span class="token builtin class-name">test</span> -z <span class="token string">"<span class="token variable">$WINELOADERNOEXEC</span>"</span>    <span class="token keyword">then</span>        <span class="token assign-left variable">GIT_EXEC_PATH</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> --exec-path <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span class="token variable">)</span></span>"</span>        <span class="token assign-left variable">COMPLETION_PATH</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;GIT_EXEC_PATH<span class="token operator">%</span><span class="token operator">/</span>libexec<span class="token operator">/</span>git-core&#125;</span>"</span>        <span class="token assign-left variable">COMPLETION_PATH</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$&#123;COMPLETION_PATH<span class="token operator">%</span><span class="token operator">/</span>lib<span class="token operator">/</span>git-core&#125;</span>"</span>        <span class="token assign-left variable">COMPLETION_PATH</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$COMPLETION_PATH</span>/share/git/completion"</span>        <span class="token keyword">if</span> <span class="token builtin class-name">test</span> -f <span class="token string">"<span class="token variable">$COMPLETION_PATH</span>/git-prompt.sh"</span>        <span class="token keyword">then</span>            <span class="token builtin class-name">.</span> <span class="token string">"<span class="token variable">$COMPLETION_PATH</span>/git-completion.bash"</span>            <span class="token builtin class-name">.</span> <span class="token string">"<span class="token variable">$COMPLETION_PATH</span>/git-prompt.sh"</span>            <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'\[\033[31m\]'</span>   <span class="token comment"># 红色</span>            <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'`__git_ps1`'</span>    <span class="token comment"># git 插件</span>        <span class="token keyword">fi</span>    <span class="token keyword">fi</span>    <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span><span class="token string">'\[\033[36m\] '</span>      <span class="token comment"># 青色</span><span class="token keyword">fi</span><span class="token assign-left variable">MSYS2_PS1</span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$PS1</span>"</span></code></pre><p>这个非常像 oh-my-zsh 的风格, 其实一开始就是想用zsh终端的, 奈何windows不支持, 如果平时日常开发想装的话也可以在linux虚拟主机或者docker里面装一个, zsh在目前来说可以说是最强大的shell了, 谁用谁知道</p><h3 id="修改界面主题"><a href="#修改界面主题" class="headerlink" title="修改界面主题"></a>修改界面主题</h3><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> ~/.minttyrc</code></pre><p>默认配置如下:</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token assign-left variable">Transparency</span><span class="token operator">=</span>low<span class="token assign-left variable">Language</span><span class="token operator">=</span><span class="token assign-left variable">ForegroundColour</span><span class="token operator">=</span><span class="token number">0,255</span>,64<span class="token assign-left variable">CursorColour</span><span class="token operator">=</span><span class="token number">0,255</span>,64<span class="token assign-left variable">CursorType</span><span class="token operator">=</span>block<span class="token assign-left variable">Scrollbar</span><span class="token operator">=</span>none<span class="token assign-left variable">FontHeight</span><span class="token operator">=</span><span class="token number">12</span></code></pre><p>把以下内容添加到配置文件里面：</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token assign-left variable">Font</span><span class="token operator">=</span>Fira Code Medium<span class="token assign-left variable">FontHeight</span><span class="token operator">=</span><span class="token number">14</span><span class="token assign-left variable">FontHeight</span><span class="token operator">=</span><span class="token number">14</span><span class="token assign-left variable">Transparency</span><span class="token operator">=</span>low<span class="token assign-left variable">FontSmoothing</span><span class="token operator">=</span>default<span class="token assign-left variable">Locale</span><span class="token operator">=</span>C<span class="token assign-left variable">Charset</span><span class="token operator">=</span>UTF-8<span class="token assign-left variable">Columns</span><span class="token operator">=</span><span class="token number">88</span><span class="token assign-left variable">Rows</span><span class="token operator">=</span><span class="token number">26</span><span class="token assign-left variable">OpaqueWhenFocused</span><span class="token operator">=</span>no<span class="token assign-left variable">Scrollbar</span><span class="token operator">=</span>none<span class="token assign-left variable">Language</span><span class="token operator">=</span>zh_CN<span class="token assign-left variable">ForegroundColour</span><span class="token operator">=</span><span class="token number">131,148</span>,150<span class="token assign-left variable">BackgroundColour</span><span class="token operator">=</span><span class="token number">0,43</span>,54<span class="token assign-left variable">CursorColour</span><span class="token operator">=</span><span class="token number">220,130</span>,71<span class="token assign-left variable">BoldBlack</span><span class="token operator">=</span><span class="token number">128,128</span>,128<span class="token assign-left variable">Red</span><span class="token operator">=</span><span class="token number">255,64</span>,40<span class="token assign-left variable">BoldRed</span><span class="token operator">=</span><span class="token number">255,128</span>,64<span class="token assign-left variable">Green</span><span class="token operator">=</span><span class="token number">64,200</span>,64<span class="token assign-left variable">BoldGreen</span><span class="token operator">=</span><span class="token number">64,255</span>,64<span class="token assign-left variable">Yellow</span><span class="token operator">=</span><span class="token number">190,190</span>,0<span class="token assign-left variable">BoldYellow</span><span class="token operator">=</span><span class="token number">255,255</span>,64<span class="token assign-left variable">Blue</span><span class="token operator">=</span><span class="token number">0,128</span>,255<span class="token assign-left variable">BoldBlue</span><span class="token operator">=</span><span class="token number">128,160</span>,255<span class="token assign-left variable">Magenta</span><span class="token operator">=</span><span class="token number">211,54</span>,130<span class="token assign-left variable">BoldMagenta</span><span class="token operator">=</span><span class="token number">255,128</span>,255<span class="token assign-left variable">Cyan</span><span class="token operator">=</span><span class="token number">64,190</span>,190<span class="token assign-left variable">BoldCyan</span><span class="token operator">=</span><span class="token number">128,255</span>,255<span class="token assign-left variable">White</span><span class="token operator">=</span><span class="token number">200,200</span>,200<span class="token assign-left variable">BoldWhite</span><span class="token operator">=</span><span class="token number">255,255</span>,255<span class="token assign-left variable">BellTaskbar</span><span class="token operator">=</span>no<span class="token assign-left variable">Term</span><span class="token operator">=</span>xterm<span class="token assign-left variable">FontWeight</span><span class="token operator">=</span><span class="token number">400</span><span class="token assign-left variable">FontIsBold</span><span class="token operator">=</span>no</code></pre><p>最后重启Git-Bash就可以看到配置好的界面了</p><p>效果图:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://aexphoto-1251755124.file.myqcloud.com/img/2022/02/b59d6821407fde73b5f757df99c3b600.png" alt="image-20220225095728006" title="">                </div>                <div class="image-caption">image-20220225095728006</div>            </figure><p>另外说一下第一行是在 Options 中选择字体时设置的，我使用了 Fira Code， 14号字体,   Fira Code就是一款为写程序而生的字体</p><p>以上内容参考网络文章 有兴趣的可以深入了解<a href="http://www.voidcn.com/article/p-wavhthxe-tr.html">这里</a>, 不过也有可能无法访问了</p><h3 id="Fira-Code"><a href="#Fira-Code" class="headerlink" title="Fira Code"></a>Fira Code</h3><p><a href="https://www.jianshu.com/p/266b4fa2c446?tdsourcetag=s_pctim_aiomsg">Fira</a> 是 Mozilla 公司（火狐浏览器她爹）主推的字体系列。Fira Code 是其中的一员，专为写程序而生。出来具有<code>等宽</code>等基本属性外，还加入了编程连字特性（ligatures）。</p><p>Fira Code 就是利用这个特性对编程中的常用符号进行优化，比如把输入的「!=」直接显示成「≠」或者把「&gt;=」变成「≥ 」等等，以此来提高代码的可读性</p><p>本人的使用的IDE也是装的这一款字体, 咳咳跑题了..</p><h3 id="一言与终端结合"><a href="#一言与终端结合" class="headerlink" title="一言与终端结合"></a>一言与终端结合</h3><p>去年无意发现一个名叫 <a href="https://hitokoto.cn/">一言</a> 的网站, 这个网站只是单纯的提供一句话,  可以是动漫中的台词，也可以是网络上的各种小段子。 或是感动，或是开心，有或是单纯的回忆</p><p> 并且还官方还提供了 <a href="https://developer.hitokoto.cn/sentence/#%E7%AE%80%E4%BB%8B">API接口文档</a> 供我们免费调用, 于是并尝试了把该功能与终端做结合, 大概就是, 启动终端时请求API, 把随机返回的句子显示在终端上, 我认为是个有趣的想法, 具体实现思路, 写一个请求一言API的脚本, 终端启动时自动调用一次这个脚本</p><p>效果如下:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://aexphoto-1251755124.file.myqcloud.com/img/2022/02/6000258bf5290f8a45b134500f78ed39.png" alt="图片" title="">                </div>                <div class="image-caption">图片</div>            </figure><p>编写一言脚本, 文件名和路径没有具体要求, 看个人</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> yy</code></pre><p>具体代码<a href="https://github.com/chuchu-z/local-config/blob/master/yy">GitHub</a>上也有,  直接拿下面的也行:</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 一言</span><span class="token comment"># 返回普通文本</span><span class="token comment">#`curl -ks https://v1.hitokoto.cn/?encode=text`</span><span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">'https://v1.hitokoto.cn'</span><span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token variable">$1</span> <span class="token operator">!=</span> x <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token assign-left variable">url</span><span class="token operator">=</span><span class="token string">'https://v1.hitokoto.cn?'</span><span class="token variable">$1</span><span class="token keyword">fi</span><span class="token comment"># 处理 json 数据(处理json数据需要安装jq)</span><span class="token assign-left variable">json</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">curl</span> -ks $url<span class="token variable">`</span></span><span class="token comment"># linux 安裝jq</span><span class="token comment"># yum install epel-release</span><span class="token comment"># yum list jq</span><span class="token comment"># yum install jq</span><span class="token comment"># windows 安裝jq</span><span class="token comment"># https://stedolan.github.io/jq/</span><span class="token assign-left variable">random</span><span class="token operator">=</span>$<span class="token punctuation">[</span><span class="token environment constant">RANDOM</span>%7+31<span class="token punctuation">]</span><span class="token builtin class-name">echo</span> -e<span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">&#123;</span>json<span class="token punctuation">&#125;</span> <span class="token operator">|</span> jq <span class="token string">'.hitokoto'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/"//g'</span> <span class="token operator">|</span> <span class="token function">tr</span> -d <span class="token string">'\n'</span><span class="token variable">`</span></span><span class="token builtin class-name">printf</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[1;<span class="token variable">$&#123;random&#125;</span>m%s<span class="token entity" title="\033">\033</span>[0m"</span> <span class="token string">"『 "</span> <span class="token variable">$content</span> <span class="token string">" 』"</span><span class="token assign-left variable">from_who</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">&#123;</span>json<span class="token punctuation">&#125;</span> <span class="token operator">|</span> jq <span class="token string">'.from_who'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/"//g'</span> <span class="token operator">|</span> <span class="token function">tr</span> -d <span class="token string">'\n'</span><span class="token variable">`</span></span><span class="token builtin class-name">echo</span> -e<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$from_who</span>"</span> <span class="token operator">==</span> <span class="token string">'null'</span> <span class="token punctuation">]</span><span class="token keyword">then</span>    <span class="token assign-left variable">from_who</span><span class="token operator">=</span><span class="token string">'匿名'</span><span class="token keyword">fi</span><span class="token assign-left variable">length</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">expr</span> $<span class="token punctuation">&#123;</span>#content<span class="token punctuation">&#125;</span> <span class="token punctuation">\</span>* <span class="token number">2</span><span class="token variable">`</span></span><span class="token builtin class-name">printf</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[1;<span class="token variable">$&#123;random&#125;</span>m%<span class="token variable">$&#123;length&#125;</span>s<span class="token entity" title="\033">\033</span>[0m"</span> <span class="token string">"—— <span class="token variable">$from_who</span>"</span><span class="token assign-left variable">from</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">&#123;</span>json<span class="token punctuation">&#125;</span> <span class="token operator">|</span> jq <span class="token string">'.from'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/"//g'</span> <span class="token operator">|</span> <span class="token function">tr</span> -d <span class="token string">'\n'</span><span class="token variable">`</span></span><span class="token builtin class-name">printf</span> <span class="token string">"<span class="token entity" title="\033">\033</span>[1;<span class="token variable">$&#123;random&#125;</span>m%s<span class="token entity" title="\033">\033</span>[0m"</span> <span class="token string">"「"</span> <span class="token variable">$from</span> <span class="token string">"」"</span><span class="token builtin class-name">echo</span> -e<span class="token builtin class-name">exit</span> <span class="token number">0</span></code></pre><p>编写完后可以试着执行 yy脚本一下试试 (代码里有说明要安装jq处理json数据)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://aexphoto-1251755124.file.myqcloud.com/img/2022/02/4bafe9395e8ebc8797efa3ffe93e244e.png" alt="具体效果" title="">                </div>                <div class="image-caption">具体效果</div>            </figure><p>最后编辑~/.bashrc文件, 因为Git-Bash启动时会加载此文件</p><pre class="language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> ~/.bashrc</code></pre><p>在文件内容里加上yy后保存退出重新启动Git-Bash就行, (我能直接执行yy是配置了环境变量的, 如果没有配置的话需要写绝对路径)</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vim ~/.bashrc</span><span class="token comment"># Git-Bash 初始化加载此配置文件</span><span class="token comment"># shopt -s expand_aliases</span><span class="token comment"># 允许shell脚本中使用 alias 命令</span><span class="token comment"># 经测试, 在 #!/bin/sh 下, 该命令可有可无, 不影响 alias 的使用</span><span class="token comment"># 在 !/bin/bash 下，才有影响</span>yy</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于Git默认的界面长的实在是不够美观, 平时用起来都无法赏心悦目, 参考网上的一些文章资料, 做了下改动&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://github.com/chuchu-z/categories/git/"/>
    
    
    <category term="Git" scheme="https://github.com/chuchu-z/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Docker环境初始化及安装php扩展</title>
    <link href="https://github.com/chuchu-z/posts/docker-init-php-extensions/"/>
    <id>https://github.com/chuchu-z/posts/docker-init-php-extensions/</id>
    <published>2021-12-30T06:53:42.000Z</published>
    <updated>2022-03-31T02:36:04.528Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker环境初始化及安装php扩展"><a href="#Docker环境初始化及安装php扩展" class="headerlink" title="Docker环境初始化及安装php扩展"></a>Docker环境初始化及安装php扩展</h3><span id="more"></span><pre class="language-bash" data-language="bash"><code class="language-bash">yum -y <span class="token function">install</span> <span class="token function">vim</span><span class="token function">vim</span> /root/.bashrc<span class="token comment"># 设置alias</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">e</span><span class="token operator">=</span><span class="token string">'exit'</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">www</span><span class="token operator">=</span><span class="token string">'cd /home/www/task_server'</span><span class="token comment"># 写入设置utf8编码,否则乱码,设置好后先保存退出,并执行source /root/.bashrc生效,再设置PS1变量</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span><span class="token string">"en_US.utf8"</span><span class="token comment"># 设置完编码后这里先退出保存一次,先让编码生效, 然后再打开编辑</span><span class="token builtin class-name">source</span> /root/.bashrc<span class="token comment"># 设置PS1变量</span><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"\[<span class="token entity" title="\033">\033</span>]0;Docker<span class="token entity" title="\007">\007</span>\]<span class="token entity" title="\n">\n</span>\[<span class="token entity" title="\033">\033</span>[32;1m\] ➜ \[<span class="token entity" title="\033">\033</span>[33;1m\]\W\[<span class="token entity" title="\033">\033</span>[34;1m\] [<span class="token entity" title="\t">\t</span>]\[<span class="token entity" title="\033">\033</span>[31m\]\[<span class="token entity" title="\033">\033</span>[36m\] "</span><span class="token comment"># 保存退出</span><span class="token builtin class-name">source</span> /root/.bashrc<span class="token comment"># 新框架资产中心需要用到GRPC, Docker环境下安装GRPC</span><span class="token comment"># 查看版本</span>pecl version <span class="token comment">#如果没有安装 pecl</span><span class="token comment"># php版本 > 7</span><span class="token function">wget</span> http://pear.php.net/go-pear.pharphp go-pear.phar<span class="token comment"># php版本 &lt; 7</span>yum <span class="token function">install</span> php-pear<span class="token comment">#否则会报错PHP Parse error:  syntax error, unexpected //'new' (T_NEW) in /usr/share/pear/PEAR/Frontend.php on //line 91</span><span class="token comment"># 安装 grpc</span>pecl <span class="token function">install</span> grpc<span class="token comment"># 因为pecl没有加入PATH变量, 如果默认pecl PHP版本小于7.0 则可以使用一下路径方式或者把/usr/local/php/bin/加入PATH变量</span>/usr/local/php/bin/pecl <span class="token function">install</span> protobuf/usr/local/php/bin/pecl <span class="token function">install</span> grpc/usr/local/php/bin/pecl <span class="token function">install</span> apcu<span class="token comment"># GCC版本4.8编译报错, 升级版本到gcc 7.3</span>yum -y <span class="token function">install</span> centos-release-sclyum -y <span class="token function">install</span> devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-binutilsscl <span class="token builtin class-name">enable</span> devtoolset-7 <span class="token function">bash</span><span class="token builtin class-name">echo</span> <span class="token string">"source /opt/rh/devtoolset-7/enable"</span> <span class="token operator">>></span>/etc/profile<span class="token comment"># ssh证书问题 如果没有openssl文件夹先创建</span><span class="token function">wget</span> http://curl.haxx.se/ca/cacert.pem <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> cacert.pem /usr/local/openssl/cert.pem<span class="token comment"># 写入配置</span><span class="token builtin class-name">echo</span> <span class="token string">"extension=grpc.so"</span> <span class="token operator">>></span> /usr/local/php/etc/php.ini<span class="token builtin class-name">echo</span> <span class="token string">"extension=protobuf.so"</span> <span class="token operator">>></span> /usr/local/php/etc/php.ini<span class="token builtin class-name">echo</span> <span class="token string">"extension=apcu.so"</span> <span class="token operator">>></span> /usr/local/php/etc/php.ini<span class="token comment">#重启Docker</span></code></pre><h3 id="Docker-启动报错"><a href="#Docker-启动报错" class="headerlink" title="Docker 启动报错"></a>Docker 启动报错</h3><pre class="language-bash" data-language="bash"><code class="language-bash">Docker.Core.Backend.BackendException:Error response from daemon: <span class="token function">open</span> <span class="token punctuation">\</span><span class="token punctuation">\</span>.<span class="token punctuation">\</span>pipe<span class="token punctuation">\</span>docker_engine_linux: The system cannot <span class="token function">find</span> the <span class="token function">file</span> specified.</code></pre><p><strong>在win10 管理员身份打开cmd命令行提示符执行:</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash">Net stop com.docker.serviceNet start com.docker.service</code></pre><h3 id="以往安装时执行过的命令参考"><a href="#以往安装时执行过的命令参考" class="headerlink" title="以往安装时执行过的命令参考"></a>以往安装时执行过的命令参考</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>   vp<span class="token number">2</span>   php -m<span class="token number">3</span>   e<span class="token number">4</span>   <span class="token builtin class-name">logout</span><span class="token number">5</span>   <span class="token builtin class-name">exit</span><span class="token number">6</span>   <span class="token builtin class-name">exit</span><span class="token number">7</span>   yum -y <span class="token function">install</span> <span class="token function">vim</span><span class="token number">8</span>   <span class="token function">vim</span> /root/.bashrc<span class="token number">9</span>   <span class="token builtin class-name">source</span> /root/.bashrc<span class="token number">10</span>  <span class="token function">vim</span> /root/.bashrc<span class="token number">11</span>  <span class="token builtin class-name">source</span> /root/.bashrc<span class="token number">12</span>  pecl version <span class="token number">13</span>  <span class="token function">wget</span> http://pear.php.net/go-pear.phar<span class="token number">14</span>  php go-pear.phar<span class="token number">15</span>  <span class="token function">wget</span> http://pear.php.net/go-pear.phar<span class="token number">16</span>  php go-pear.phar<span class="token number">17</span>  yum <span class="token function">install</span> php-pear<span class="token number">18</span>  pecl <span class="token function">install</span> grpc<span class="token number">19</span>  /usr/local/php/bin/pecl <span class="token function">install</span> protobuf<span class="token number">20</span>  /usr/local/php/bin/pecl <span class="token function">install</span> protobuf<span class="token number">21</span>  /usr/local/php/bin/pecl <span class="token function">install</span> grpc<span class="token number">22</span>  yum <span class="token function">install</span> php70w-devel<span class="token number">23</span>  /usr/bin/phpize<span class="token number">24</span>  <span class="token function">which</span> phpize<span class="token number">25</span>  /usr/bin/phpize<span class="token number">26</span>  yum <span class="token function">install</span> php-devel <span class="token number">27</span>  php -v<span class="token number">28</span>  yum <span class="token function">install</span> php70w-devel <span class="token number">29</span>  /usr/bin/phpize<span class="token number">30</span>  <span class="token function">which</span> php<span class="token number">31</span>  <span class="token builtin class-name">cd</span> /usr/local/bin/php<span class="token number">32</span>  <span class="token builtin class-name">pwd</span><span class="token number">33</span>  ll<span class="token number">34</span>  /usr/local/php/bin/pecl <span class="token function">install</span> protobuf<span class="token number">35</span>  /usr/local/php/bin/pecl <span class="token function">install</span> grpc<span class="token number">36</span>  gcc --version<span class="token number">37</span>  g++ --version<span class="token number">38</span>  yum -y <span class="token function">install</span> centos-release-scl<span class="token number">39</span>  yum -y <span class="token function">install</span> devtoolset-6-gcc devtoolset-6-gcc-c++ devtoolset-6-binutils<span class="token number">40</span>  scl <span class="token builtin class-name">enable</span> devtoolset-6 <span class="token function">bash</span><span class="token number">41</span>  yum <span class="token function">install</span> centos-release-scl scl-utils-build<span class="token number">42</span>  yum list all --enablerepo<span class="token operator">=</span><span class="token string">'centos-sclo-rh'</span><span class="token number">43</span>  yum <span class="token function">install</span> devtoolset-4-gcc.x86_64 devtoolset-4-gcc-c++.x86_64 devtoolset-4-gcc-gdb-plugin.x86_64 <span class="token number">44</span>  scl --list 或 scl -l<span class="token number">45</span>  scl --list<span class="token number">46</span>  gcc -v<span class="token number">47</span>  php -m<span class="token number">48</span>  e<span class="token number">49</span>  /usr/local/php/bin/pecl <span class="token function">install</span> protobuf<span class="token number">50</span>  /usr/local/php/bin/pecl channel-update pecl.php.net<span class="token number">51</span>  /usr/local/php/bin/pecl <span class="token function">install</span> protobuf<span class="token number">52</span>  e<span class="token number">53</span>  pecl version <span class="token number">54</span>  <span class="token function">wget</span> http://pear.php.net/go-pear.phar<span class="token number">55</span>  php go-pear.phar<span class="token number">56</span>  <span class="token function">vim</span> /etc/profile<span class="token number">57</span>  <span class="token function">vim</span> ~/.bashrc <span class="token number">58</span>  <span class="token function">vim</span> ~/.bashrc <span class="token number">59</span>  <span class="token builtin class-name">source</span> ~/.bashrc<span class="token number">60</span>  gcc --version<span class="token number">61</span>  g++ --version<span class="token number">62</span>  /usr/local/php/bin/pecl <span class="token function">install</span> protobuf<span class="token number">63</span>  <span class="token function">wget</span> http://curl.haxx.se/ca/cacert.pem <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> cacert.pem /usr/local/openssl/cert.pem<span class="token number">64</span>  ll<span class="token number">65</span>  /usr/local/php/bin/pecl <span class="token function">install</span> protobuf<span class="token number">66</span>  /usr/local/php/bin/pecl <span class="token function">install</span> grpc<span class="token number">67</span>  /usr/local/php/bin/pecl <span class="token function">install</span> grpc<span class="token number">68</span>  /usr/local/php/bin/pecl <span class="token function">install</span> apcu<span class="token number">69</span>  /usr/local/php/bin/pecl <span class="token function">install</span> apcu<span class="token number">70</span>  <span class="token function">wget</span> http://curl.haxx.se/ca/cacert.pem <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> cacert.pem /usr/local/openssl/cert.pem<span class="token number">71</span>  ll<span class="token number">72</span>  <span class="token builtin class-name">cd</span> /usr/local/openssl<span class="token number">73</span>  <span class="token builtin class-name">cd</span> /usr/local/<span class="token number">74</span>  <span class="token function">mkdir</span> openssl<span class="token number">75</span>  <span class="token builtin class-name">cd</span> -<span class="token number">76</span>  <span class="token function">mv</span> cacert.pem /usr/local/openssl/cert.pem<span class="token number">77</span>  /usr/local/php/bin/pecl <span class="token function">install</span> apcu<span class="token number">78</span>  <span class="token function">vim</span> /usr/local/php/etc/php.ini<span class="token number">79</span>  e<span class="token number">80</span>  pecl <span class="token function">install</span> grpc<span class="token number">81</span>  pecl channel-update pecl.php.net<span class="token number">82</span>  pecl <span class="token function">install</span> grpc<span class="token number">83</span>  yum -y <span class="token function">install</span> centos-release-scl<span class="token number">84</span>  yum -y <span class="token function">install</span> devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-binutils<span class="token number">85</span>  scl <span class="token builtin class-name">enable</span> devtoolset-7 <span class="token function">bash</span><span class="token number">86</span>  e<span class="token number">87</span>  www<span class="token number">88</span>  php tinyBell.php<span class="token number">89</span>  php tinyBell.php start<span class="token number">90</span>  php tinyBell.php start<span class="token number">91</span>  <span class="token builtin class-name">pwd</span><span class="token number">92</span>  e</code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Docker环境初始化及安装php扩展&quot;&gt;&lt;a href=&quot;#Docker环境初始化及安装php扩展&quot; class=&quot;headerlink&quot; title=&quot;Docker环境初始化及安装php扩展&quot;&gt;&lt;/a&gt;Docker环境初始化及安装php扩展&lt;/h3&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://github.com/chuchu-z/categories/docker/"/>
    
    
    <category term="Docker" scheme="https://github.com/chuchu-z/tags/docker/"/>
    
  </entry>
  
</feed>
